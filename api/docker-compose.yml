version: '3.8'
services:
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: rideshare-api
    restart: unless-stopped
    ports:
      - "0.0.0.0:8000:8000"
    environment:
      MONGODB_URL: ${MONGODB_URL}
      MONGODB_DB: ${MONGODB_DB:-rideshare}
      SECRET_KEY: ${SECRET_KEY:-change-me-in-production}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      OSRM_URL: ${OSRM_URL:-http://router.project-osrm.org}
      RATE_LIMIT_PER_MINUTE: ${RATE_LIMIT_PER_MINUTE:-60}
      DEFAULT_FUEL_EFFICIENCY: ${DEFAULT_FUEL_EFFICIENCY:-15.0}
      CO2_PER_LITER_FUEL: ${CO2_PER_LITER_FUEL:-2.31}
      EMERGENCY_RESPONSE_TIMEOUT: ${EMERGENCY_RESPONSE_TIMEOUT:-30}
      PANIC_BUTTON_COOLDOWN: ${PANIC_BUTTON_COOLDOWN:-300}
      DEFAULT_TRUST_SCORE_THRESHOLD: ${DEFAULT_TRUST_SCORE_THRESHOLD:-3.0}
      MAX_COMMUNITY_DISTANCE: ${MAX_COMMUNITY_DISTANCE:-50.0}
      MAX_ROUTE_OPTIMIZATION_STOPS: ${MAX_ROUTE_OPTIMIZATION_STOPS:-20}
      OPTIMIZATION_TIMEOUT: ${OPTIMIZATION_TIMEOUT:-30}
      NOTIFICATION_RETENTION_DAYS: ${NOTIFICATION_RETENTION_DAYS:-90}
      MAX_NOTIFICATIONS_PER_USER: ${MAX_NOTIFICATIONS_PER_USER:-1000}
    volumes:
      - ./app:/app/app:ro
      - app_logs:/app/logs
    networks:
      - rideshare-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and session management (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: rideshare-redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rideshare-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    profiles:
      - prod  # Only in production

volumes:
  redis_data:
    driver: local
  app_logs:
    driver: local

networks:
  rideshare-network:
    driver: bridge
